name: Prepare release

on:
  push:
    tags: "*"

env:
  CARGO_TERM_COLOR: always

jobs:
  build_windows:
    runs-on: windows-latest
    permissions:
      contents: write
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    

    steps:
    - uses: actions/checkout@v4
    - name: Download protoc
      id: downloader
      uses: robinraju/release-downloader@v1
      with:
        repository: protocolbuffers/protobuf
        fileName: "protoc-*-win64.zip"
        latest: true
    - name: Unpack protoc
      run: 7z x -o${{runner.temp}}/protoc ${{ fromJson(steps.downloader.outputs.downloaded_files)[0] }}
    - name: Install just
      run: cargo install just
    - name: Build
      run: just release
      env:
        PROTOC: ${{runner.temp}}/protoc/bin/protoc.exe
    - name: Unpack results
      run: 7z x -o${{runner.temp}}/5th-echelon ./5th-echelon.zip
    - uses: actions/upload-artifact@v4
      with:
        name: 5th-echelon.zip
        path: ${{runner.temp}}/5th-echelon/
        overwrite: true


  build_linux:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v4
    - name: Download protoc
      id: downloader
      uses: robinraju/release-downloader@v1
      with:
        repository: protocolbuffers/protobuf
        fileName: "protoc-*-linux-x86_64.zip"
        latest: true
    - name: Unpack protoc
      run: 7z x -o${{runner.temp}}/protoc ${{ fromJson(steps.downloader.outputs.downloaded_files)[0] }}
    - name: Build
      run: cargo build -p dedicated_server --release
      env:
        PROTOC: ${{runner.temp}}/protoc/bin/protoc
    - uses: actions/upload-artifact@v4
      with:
        name: dedicated_server-linux-x86_64
        path: ./target/release/dedicated_server
        overwrite: true

  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    needs: [build_windows, build_linux]

    steps:
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: ${{ github.ref }}
        draft: true
        prerelease: false
    # - name: Upload Release Asset
    #   id: upload-release-asset 
    #   uses: actions/upload-release-asset@v1
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #   with:
    #     upload_url: ${{ steps.create_release.outputs.upload_url }}
    #     asset_path: ./5th-echelon.zip
    #     asset_name: 5th-echelon.zip
    #     asset_content_type: application/zip
    # - name: Upload Release Asset
    #   id: upload-release-asset 
    #   uses: actions/upload-release-asset@v1
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #   with:
    #     upload_url: ${{ needs.build.outputs.upload_url }}
    #     asset_path: ./target/release/dedicated_server
    #     asset_name: dedicated_server-linux-x86_64
    #     asset_content_type: application/octet-stream
